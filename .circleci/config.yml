version: 2.1
commands:
  setup_environment:
    description: "Setup the machine environment"
    steps:
      - run:
          name: Setup Machine
          command: |
            sudo apt update
            sudo apt install -y curl
            sudo apt-get update
            sudo apt-get install -y git python-pip mysql-client-core-5.5
            sudo apt-get clean
            sudo apt-get autoclean

orbs:
  win: circleci/windows@2.2.0

jobs:
  build-windows:
    executor:
      name: win/default
      shell: bash.exe
    steps:
      - checkout
      - run: echo 'Do something'
  build-macos:
    parameters:
      memsql_image:
        type: string
    macos:
      xcode: 11.0.0
    environment:
      MEMSQL_IMAGE: << parameters.memsql_image >>
      MEMSQL_PORT: 5506
      MEMSQL_USER: root
      MEMSQL_DB: test
      TEST_DRIVER: singlestore_test
      TEST_DSN: singlestore_test
      TEST_SERVER: singlestore.example.com
      TEST_SCHEMA: test
      TEST_UID: root
      TEST_PORT: 5506
      CONTINUOUS_INTEGRATION: true
    steps:
      - checkout
      - run: echo 'Do something'
  test:
    parameters:
      memsql_image:
        type: string
    machine: true
    environment:
      MEMSQL_IMAGE: << parameters.memsql_image >>
      MEMSQL_PORT: 5506
      MEMSQL_USER: root
      MEMSQL_DB: test
      TEST_DRIVER: singlestore_test
      TEST_DSN: singlestore_test
      TEST_SERVER: singlestore.example.com
      TEST_SCHEMA: test
      TEST_UID: root
      TEST_PORT: 5506
      CONTINUOUS_INTEGRATION: true
    steps:
      - setup_environment
      - checkout
      - run:
          name: Setup test cluster
          command: |
            ./scripts/ensure-test-memsql-cluster.sh
      - run:
          name: Create test database
          command: |
            mysql -h 127.0.0.1 -u root -P 5506 -e "create database test;"
      - run:
          name: Setup ODBC Driver Manager
          command: |
            sudo apt-get update
            sudo apt-get install unixodbc odbcinst
            sudo apt-get install unixodbc-dev
            sudo apt-get install --allow-unauthenticated -y --force-yes -m unixodbc-dev odbcinst1debian2 libodbc1
      - run:
          name: Run tests
          command: |
            echo 127.0.0.1 singlestore.example.com | sudo tee -a /etc/hosts
            export MEMSQL_HOST=$(docker inspect -f '{{range .NetworkSettings.Networks}}{{.IPAddress}}{{end}}' memsql-integration)
            chmod 777 .travis/build/
            export PROJ_PATH=`pwd`
            export ENTRYPOINT=$PROJ_PATH/.travis/sql
            mkdir tmp
            .travis/gen-ssl.sh singlestore.example.com tmp
            export SSLCERT=$PROJ_PATH/tmp
            ./.circleci/script.sh

workflows:
  test:
    jobs:
      - build-windows
      - build-macos:
          matrix:
            parameters:
              memsql_image:
                - memsql/cluster-in-a-box:centos-7.0.15-619d118712-1.9.5-1.5.0
                - memsql/cluster-in-a-box:centos-6.8.15-029542cbf3-1.9.3-1.4.1
                - memsql/cluster-in-a-box:6.7.18-db1caffe94-1.6.1-1.1.1
      - test:
          #          filters:
          #            tags:
          #              only: /^v.*/
          matrix:
            parameters:
              memsql_image:
                - memsql/cluster-in-a-box:centos-7.0.15-619d118712-1.9.5-1.5.0
                - memsql/cluster-in-a-box:centos-6.8.15-029542cbf3-1.9.3-1.4.1
                - memsql/cluster-in-a-box:6.7.18-db1caffe94-1.6.1-1.1.1
